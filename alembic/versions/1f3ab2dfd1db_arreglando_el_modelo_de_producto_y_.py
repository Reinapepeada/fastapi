"""arreglando el modelo de producto y variante

Revision ID: 1f3ab2dfd1db
Revises: 65ea2c344a11
Create Date: 2024-12-04 02:31:12.246136

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1f3ab2dfd1db'
down_revision: Union[str, None] = '65ea2c344a11'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:

    op.execute('TRUNCATE TABLE product CASCADE')
    op.execute('TRUNCATE TABLE productvariant CASCADE')
    op.execute('TRUNCATE TABLE productimage CASCADE')

    # ### commands auto generated by Alembic - please adjust! ###
    # Create the enum types
    product_status_enum = sa.Enum('ACTIVE', 'INACTIVE', 'DISCONTINUED', name='productstatus')
    product_status_enum.create(op.get_bind(), checkfirst=True)

    size_unit_enum = sa.Enum('CLOTHING', 'DIMENSIONS', 'WEIGHT', 'OTHER', name='sizeunit')
    size_unit_enum.create(op.get_bind(), checkfirst=True)

    unit_enum = sa.Enum('KG', 'G', 'LB', 'CM', 'M', 'INCH', 'XS', 'S', 'L', 'XL', name='unit')
    unit_enum.create(op.get_bind(), checkfirst=True)

    op.add_column('product', sa.Column('warranty_unit', sa.String(), nullable=True))
    op.execute('ALTER TABLE product ALTER COLUMN status TYPE productstatus USING status::productstatus')
    op.add_column('productimage', sa.Column('variant_id', sa.Integer(), nullable=False))
    op.drop_constraint('productimage_product_id_fkey', 'productimage', type_='foreignkey')
    op.create_foreign_key(None, 'productimage', 'productvariant', ['variant_id'], ['id'])
    op.drop_column('productimage', 'product_id')
    op.add_column('productvariant', sa.Column('size_unit', size_unit_enum, nullable=False))
    op.add_column('productvariant', sa.Column('unit', unit_enum, nullable=False))
    op.add_column('productvariant', sa.Column('min_stock', sa.Integer(), nullable=False))
    op.alter_column('productvariant', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('productvariant', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index(op.f('ix_productvariant_color'), 'productvariant', ['color'], unique=False)
    op.create_index(op.f('ix_productvariant_min_stock'), 'productvariant', ['min_stock'], unique=False)
    op.create_index(op.f('ix_productvariant_size'), 'productvariant', ['size'], unique=False)
    op.create_index(op.f('ix_productvariant_stock'), 'productvariant', ['stock'], unique=False)
    op.create_unique_constraint('unique_variant_constraint', 'productvariant', ['product_id', 'color', 'size', 'size_unit'])
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('unique_variant_constraint', 'productvariant', type_='unique')
    op.drop_index(op.f('ix_productvariant_stock'), table_name='productvariant')
    op.drop_index(op.f('ix_productvariant_size'), table_name='productvariant')
    op.drop_index(op.f('ix_productvariant_min_stock'), table_name='productvariant')
    op.drop_index(op.f('ix_productvariant_color'), table_name='productvariant')
    op.alter_column('productvariant', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('productvariant', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('productvariant', 'min_stock')
    op.drop_column('productvariant', 'unit')
    op.drop_column('productvariant', 'size_unit')
    op.add_column('productimage', sa.Column('product_id', sa.Integer(), nullable=False))
    op.drop_constraint(None, 'productimage', type_='foreignkey')
    op.create_foreign_key('productimage_product_id_fkey', 'productimage', 'product', ['product_id'], ['id'])
    op.drop_column('productimage', 'variant_id')
    op.execute('ALTER TABLE product ALTER COLUMN status TYPE VARCHAR')
    op.drop_column('product', 'warranty_unit')

    # Drop the enum types
    product_status_enum = sa.Enum('ACTIVE', 'INACTIVE', 'DISCONTINUED', name='productstatus')
    product_status_enum.drop(op.get_bind(), checkfirst=True)

    size_unit_enum = sa.Enum('CLOTHING', 'DIMENSIONS', 'WEIGHT', 'OTHER', name='sizeunit')
    size_unit_enum.drop(op.get_bind(), checkfirst=True)

    unit_enum = sa.Enum('KG', 'G', 'LB', 'CM', 'M', 'INCH', 'XS', 'S', 'm', 'L', 'XL', name='unit')
    unit_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###